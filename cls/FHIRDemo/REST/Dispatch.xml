<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="FHIRDemo.REST.Dispatch">
<Super>%CSP.REST</Super>

<Parameter name="BsName">
<Default>WS_REST</Default>
</Parameter>

<Parameter name="CHARSET">
<Default>utf-8</Default>
</Parameter>

<Parameter name="HandleCorsRequest">
<Default>1</Default>
</Parameter>

<XData name="UrlMap">
<XMLNamespace>http://www.fhirhl7v2demo.com/urlmap</XMLNamespace>
<Data><![CDATA[
<Routes>
  <Route Url="/sendfile" Method="POST" Call="SendFileContent" Cors="true"/>
</Routes>]]></Data>
</XData>

<Method name="SendFileContent">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    If '..GetJSONFromRequest(.obj) {
        Set %response.Status = ..#HTTP400BADREQUEST
        Set error = {"errormessage": "JSON not found"}
        Write error.%ToJSON()
        Quit $$$OK
    }
    
    Set content = obj.content
    set status = $$$OK
    set tMsg = ##class(EnsLib.HL7.Message).ImportFromString(content)
    try {
        $$$ThrowOnError(##class(Ens.Director).CreateBusinessService(..#BsName,.tService))
        
        $$$ThrowOnError(tService.ProcessInput(tMsg,.output))
    } catch(ex) {
        set status = ex.AsStatus()
    }
    
    Set result={}
    do result.%Set("Status",$s($$$ISERR(status):$system.Status.GetOneErrorText(status),1:"OK"))
    write result.%ToJSON()
    return $$$OK
]]></Implementation>
</Method>

<Method name="GetJSONFromRequest">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&obj:%DynamicObject]]></FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
  Set ok = 1
	Try {
		Set obj = ##class(%DynamicObject).%FromJSON(%request.Content)
	} Catch ex {
		Set ok = 0
	}
	Quit ok
]]></Implementation>
</Method>
</Class>
</Export>
